#!/usr/bin/env node
// üñºÔ∏è –°–∫—Ä–∏–ø—Ç –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
// –í–ê–ñ–ù–û: –û—Ä–∏–≥–∏–Ω–∞–ª—ã —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è –≤ src/assets/, –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –≤ src/assets/optimized/

const sharp = require('sharp');
const path = require('path');
const fs = require('fs');

// –ü—É—Ç–∏
const ASSETS_DIR = path.join(__dirname, '../src/assets');
const OPTIMIZED_DIR = path.join(ASSETS_DIR, 'optimized');

// –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É –µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
if (!fs.existsSync(OPTIMIZED_DIR)) {
  fs.mkdirSync(OPTIMIZED_DIR, { recursive: true });
}

console.log('üöÄ –ù–∞—á–∏–Ω–∞–µ–º –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—é –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π...');
console.log(`üìÅ –ò—Å—Ö–æ–¥–Ω–∞—è –ø–∞–ø–∫–∞: ${ASSETS_DIR}`);
console.log(`üìÅ –¶–µ–ª–µ–≤–∞—è –ø–∞–ø–∫–∞: ${OPTIMIZED_DIR}`);
console.log('');

async function optimizeHeroBackground() {
  const inputPath = path.join(ASSETS_DIR, 'hero-bg.jpg');
  
  if (!fs.existsSync(inputPath)) {
    console.error('‚ùå –§–∞–π–ª hero-bg.jpg –Ω–µ –Ω–∞–π–¥–µ–Ω!');
    return;
  }

  console.log('üé® –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º hero-bg.jpg...');
  
  try {
    // 1. –°–≤–µ—Ç–ª–∞—è —Ç–µ–º–∞ - —Ç–æ–ª—å–∫–æ —Ä–∞–∑–º—ã—Ç–∏–µ
    console.log('  ‚ö™ –°–æ–∑–¥–∞–µ–º –≤–∞—Ä–∏–∞–Ω—Ç –¥–ª—è —Å–≤–µ—Ç–ª–æ–π —Ç–µ–º—ã...');
    await sharp(inputPath)
      .blur(4) // blur(8px) CSS ‚âà blur(4) –≤ Sharp
      .jpeg({ quality: 75, progressive: true })
      .toFile(path.join(OPTIMIZED_DIR, 'hero-bg-light.jpg'));
    
    // 2. –¢–µ–º–Ω–∞—è —Ç–µ–º–∞ - —Ä–∞–∑–º—ã—Ç–∏–µ + –∑–∞—Ç–µ–º–Ω–µ–Ω–∏–µ
    console.log('  ‚ö´ –°–æ–∑–¥–∞–µ–º –≤–∞—Ä–∏–∞–Ω—Ç –¥–ª—è —Ç–µ–º–Ω–æ–π —Ç–µ–º—ã...');
    await sharp(inputPath)
      .blur(4)
      .modulate({ brightness: 0.7 }) // brightness(0.7) –∫–∞–∫ –≤ CSS
      .jpeg({ quality: 75, progressive: true })
      .toFile(path.join(OPTIMIZED_DIR, 'hero-bg-dark.jpg'));

    // 3. Responsive –≤–∞—Ä–∏–∞–Ω—Ç—ã –¥–ª—è —Å–≤–µ—Ç–ª–æ–π —Ç–µ–º—ã
    console.log('  üì± –°–æ–∑–¥–∞–µ–º mobile –≤–∞—Ä–∏–∞–Ω—Ç (—Å–≤–µ—Ç–ª–∞—è —Ç–µ–º–∞)...');
    await sharp(inputPath)
      .resize(480, 320, { fit: 'cover' })
      .blur(3)
      .jpeg({ quality: 70, progressive: true })
      .toFile(path.join(OPTIMIZED_DIR, 'hero-bg-light-mobile.jpg'));

    console.log('  üì± –°–æ–∑–¥–∞–µ–º tablet –≤–∞—Ä–∏–∞–Ω—Ç (—Å–≤–µ—Ç–ª–∞—è —Ç–µ–º–∞)...');
    await sharp(inputPath)
      .resize(768, 400, { fit: 'cover' })
      .blur(4)
      .jpeg({ quality: 73, progressive: true })
      .toFile(path.join(OPTIMIZED_DIR, 'hero-bg-light-tablet.jpg'));

    console.log('  üíª –°–æ–∑–¥–∞–µ–º desktop –≤–∞—Ä–∏–∞–Ω—Ç (—Å–≤–µ—Ç–ª–∞—è —Ç–µ–º–∞)...');
    await sharp(inputPath)
      .resize(1200, 600, { fit: 'cover' })
      .blur(4)
      .jpeg({ quality: 75, progressive: true })
      .toFile(path.join(OPTIMIZED_DIR, 'hero-bg-light-desktop.jpg'));

    // 4. Responsive –≤–∞—Ä–∏–∞–Ω—Ç—ã –¥–ª—è —Ç–µ–º–Ω–æ–π —Ç–µ–º—ã
    console.log('  üì± –°–æ–∑–¥–∞–µ–º mobile –≤–∞—Ä–∏–∞–Ω—Ç (—Ç–µ–º–Ω–∞—è —Ç–µ–º–∞)...');
    await sharp(inputPath)
      .resize(480, 320, { fit: 'cover' })
      .blur(3)
      .modulate({ brightness: 0.7 })
      .jpeg({ quality: 70, progressive: true })
      .toFile(path.join(OPTIMIZED_DIR, 'hero-bg-dark-mobile.jpg'));

    console.log('  üì± –°–æ–∑–¥–∞–µ–º tablet –≤–∞—Ä–∏–∞–Ω—Ç (—Ç–µ–º–Ω–∞—è —Ç–µ–º–∞)...');
    await sharp(inputPath)
      .resize(768, 400, { fit: 'cover' })
      .blur(4)
      .modulate({ brightness: 0.7 })
      .jpeg({ quality: 73, progressive: true })
      .toFile(path.join(OPTIMIZED_DIR, 'hero-bg-dark-tablet.jpg'));

    console.log('  üíª –°–æ–∑–¥–∞–µ–º desktop –≤–∞—Ä–∏–∞–Ω—Ç (—Ç–µ–º–Ω–∞—è —Ç–µ–º–∞)...');
    await sharp(inputPath)
      .resize(1200, 600, { fit: 'cover' })
      .blur(4)
      .modulate({ brightness: 0.7 })
      .jpeg({ quality: 75, progressive: true })
      .toFile(path.join(OPTIMIZED_DIR, 'hero-bg-dark-desktop.jpg'));

    // 5. WebP –≤–∞—Ä–∏–∞–Ω—Ç—ã –¥–ª—è –ª—É—á—à–µ–≥–æ —Å–∂–∞—Ç–∏—è
    console.log('  üåê –°–æ–∑–¥–∞–µ–º WebP –≤–∞—Ä–∏–∞–Ω—Ç—ã...');
    
    // WebP —Å–≤–µ—Ç–ª–∞—è —Ç–µ–º–∞
    await sharp(inputPath)
      .blur(4)
      .webp({ quality: 75 })
      .toFile(path.join(OPTIMIZED_DIR, 'hero-bg-light.webp'));
    
    // WebP —Ç–µ–º–Ω–∞—è —Ç–µ–º–∞
    await sharp(inputPath)
      .blur(4)
      .modulate({ brightness: 0.7 })
      .webp({ quality: 75 })
      .toFile(path.join(OPTIMIZED_DIR, 'hero-bg-dark.webp'));

    console.log('');
    console.log('‚úÖ hero-bg.jpg —É—Å–ø–µ—à–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω!');
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ hero-bg.jpg:', error.message);
  }
}

async function getFileSize(filePath) {
  try {
    const stats = fs.statSync(filePath);
    return (stats.size / 1024).toFixed(1) + ' KB';
  } catch {
    return 'N/A';
  }
}

async function showResults() {
  console.log('');
  console.log('üìä –†–ï–ó–£–õ–¨–¢–ê–¢–´ –û–ü–¢–ò–ú–ò–ó–ê–¶–ò–ò:');
  console.log('');
  
  const originalSize = await getFileSize(path.join(ASSETS_DIR, 'hero-bg.jpg'));
  console.log(`üî∏ –û—Ä–∏–≥–∏–Ω–∞–ª: hero-bg.jpg (${originalSize})`);
  console.log('');
  
  console.log('üî∏ –û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã:');
  
  const variants = [
    'hero-bg-light.jpg',
    'hero-bg-dark.jpg', 
    'hero-bg-light-mobile.jpg',
    'hero-bg-light-tablet.jpg',
    'hero-bg-light-desktop.jpg',
    'hero-bg-dark-mobile.jpg',
    'hero-bg-dark-tablet.jpg',
    'hero-bg-dark-desktop.jpg',
    'hero-bg-light.webp',
    'hero-bg-dark.webp'
  ];
  
  for (const variant of variants) {
    const size = await getFileSize(path.join(OPTIMIZED_DIR, variant));
    console.log(`   - ${variant} (${size})`);
  }
  
  console.log('');
  console.log('‚úÖ –í—Å–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã —Å–æ–∑–¥–∞–Ω—ã —É—Å–ø–µ—à–Ω–æ!');
  console.log('üìÅ –û—Ä–∏–≥–∏–Ω–∞–ª—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤: src/assets/');
  console.log('üìÅ –û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –≤: src/assets/optimized/');
}

// –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
async function main() {
  try {
    await optimizeHeroBackground();
    await showResults();
    
    console.log('');
    console.log('üéØ –°–õ–ï–î–£–Æ–©–ò–ï –®–ê–ì–ò:');
    console.log('1. –û–±–Ω–æ–≤–∏—Ç—å HeroSection.tsx –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π');
    console.log('2. –û–±–Ω–æ–≤–∏—Ç—å ProductsPage.tsx');
    console.log('3. –£–±—Ä–∞—Ç—å CSS —Ñ–∏–ª—å—Ç—Ä—ã (filter: blur, brightness)');
    console.log('4. –£–±—Ä–∞—Ç—å transform: scale');
    console.log('5. –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å');
    
  } catch (error) {
    console.error('‚ùå –û–±—â–∞—è –æ—à–∏–±–∫–∞:', error.message);
    process.exit(1);
  }
}

// –ó–∞–ø—É—Å–∫
main();