// üë§ Redux slice –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
import { createSlice, type PayloadAction } from '@reduxjs/toolkit';
import type { User, AuthState } from '../../../types/api';

// üì° API URL –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤ RTK Query (shared/api/rtk.ts)

// üîê RTK Query –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –ª–æ–≥–∏–Ω–∞/—Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏/–ø—Ä–æ—Ñ–∏–ª—è/—Å–±—Ä–æ—Å–∞ –ø–∞—Ä–æ–ª—è

// –ù–∞—á–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
const initialState: AuthState = {
  user: null,
  token: localStorage.getItem('authToken'),
  isAuthenticated: false,
  isLoading: false,
  error: null,
};

// Redux slice
const userSlice = createSlice({
  name: 'auth',
  initialState,
  reducers: {
    // –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    setUser: (state, action: PayloadAction<User>) => {
      state.user = action.payload;
      state.isAuthenticated = true;
      state.error = null;
    },

    // –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ç–æ–∫–µ–Ω
    setToken: (state, action: PayloadAction<string>) => {
      state.token = action.payload;
      localStorage.setItem('authToken', action.payload);
    },

    // –û—á–∏—Å—Ç–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–≤—ã—Ö–æ–¥)
    clearUser: (state) => {
      state.user = null;
      state.token = null;
      state.isAuthenticated = false;
      state.error = null;
      localStorage.removeItem('authToken');
      localStorage.removeItem('rememberedEmail');
    },

    // –í–æ–π—Ç–∏ –∫–∞–∫ –≥–æ—Å—Ç—å
    loginAsGuest: (state) => {
      state.user = {
        id: 0,
        name: '–ì–æ—Å—Ç—å',
        email: 'guest@example.com',
        preferredLanguage: 'ru',
        isGuest: true,
      };
      state.isAuthenticated = true;
      state.error = null;
    },

    // –û—á–∏—Å—Ç–∏—Ç—å –æ—à–∏–±–∫—É
    clearError: (state) => {
      state.error = null;
    },

    // –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏
    setLoading: (state, action: PayloadAction<boolean>) => {
      state.isLoading = action.payload;
    },
  },
  extraReducers: () => {},
});

// –≠–∫—Å–ø–æ—Ä—Ç –¥–µ–π—Å—Ç–≤–∏–π
export const {
  setUser,
  setToken,
  clearUser,
  loginAsGuest,
  clearError,
  setLoading,
} = userSlice.actions;

// –°–µ–ª–µ–∫—Ç–æ—Ä—ã
export const selectUser = (state: { auth: AuthState }) => state.auth.user;
export const selectToken = (state: { auth: AuthState }) => state.auth.token;
export const selectIsAuthenticated = (state: { auth: AuthState }) => state.auth.isAuthenticated;
export const selectIsLoading = (state: { auth: AuthState }) => state.auth.isLoading;
export const selectError = (state: { auth: AuthState }) => state.auth.error;

// –≠–∫—Å–ø–æ—Ä—Ç reducer
export default userSlice.reducer;