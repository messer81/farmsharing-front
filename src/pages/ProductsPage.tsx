// üõçÔ∏è –°—Ç—Ä–∞–Ω–∏—Ü–∞ –∫–∞—Ç–∞–ª–æ–≥–∞ –ø—Ä–æ–¥—É–∫—Ç–æ–≤ —Å Axios API
import { Container, Typography, Box, CircularProgress, Alert } from '@mui/material';
import { useEffect, useState } from 'react';
import { ProductsGrid } from '../entities/product/ui/ProductsGrid';
import { useProductsAll } from '../shared/api/useApi';
import type { Product } from '../types/api';

const ProductsPage = () => {
  const [products, setProducts] = useState<Product[]>([]);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState<string | null>(null);

  // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å—Ç–∞–±–∏–ª—å–Ω—ã–π —Ö—É–∫ –¥–ª—è –ø—Ä–æ–¥—É–∫—Ç–æ–≤
  const { data, loading: apiLoading, error: apiError, execute: fetchProducts } = useProductsAll();

  // –ó–∞–≥—Ä—É–∂–∞–µ–º –ø—Ä–æ–¥—É–∫—Ç—ã –ø—Ä–∏ –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
  useEffect(() => {
    const loadProducts = async () => {
      try {
        setLoading(true);
        setError(null);
        await fetchProducts();
      } catch (err) {
        setError(err instanceof Error ? err.message : '–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø—Ä–æ–¥—É–∫—Ç–æ–≤');
      } finally {
        setLoading(false);
      }
    };

    loadProducts();
  }, [fetchProducts]);

  // –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö
  useEffect(() => {
    if (data?.data) {
      setProducts(data.data);
    }
  }, [data]);

  // –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ –∏ –æ—à–∏–±–æ–∫
  useEffect(() => {
    setLoading(apiLoading);
  }, [apiLoading]);

  useEffect(() => {
    setError(apiError);
  }, [apiError]);

  if (loading) {
    return (
      <Container maxWidth="xl">
        <Box display="flex" justifyContent="center" alignItems="center" minHeight="400px">
          <CircularProgress size={60} />
        </Box>
      </Container>
    );
  }

  if (error) {
    return (
      <Container maxWidth="xl">
        <Box mt={4}>
          <Alert severity="error">
            <Typography variant="h6">–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø—Ä–æ–¥—É–∫—Ç–æ–≤</Typography>
            <Typography>{error}</Typography>
          </Alert>
        </Box>
      </Container>
    );
  }

  return (
    <Container maxWidth="xl">
      <Box mt={4} mb={2}>
        <Typography variant="h4" component="h1" gutterBottom>
          üõçÔ∏è –ö–∞—Ç–∞–ª–æ–≥ –ø—Ä–æ–¥—É–∫—Ç–æ–≤
        </Typography>
        <Typography variant="body1" color="text.secondary">
          –ù–∞–π–¥–µ–Ω–æ –ø—Ä–æ–¥—É–∫—Ç–æ–≤: {products.length}
        </Typography>
      </Box>
      <ProductsGrid products={products} />
    </Container>
  );
};

export default ProductsPage;