// üõçÔ∏è –°—Ç—Ä–∞–Ω–∏—Ü–∞ –∫–∞—Ç–∞–ª–æ–≥–∞ –ø—Ä–æ–¥—É–∫—Ç–æ–≤ —Å Axios API
import Container from '@mui/material/Container';
import Typography from '@mui/material/Typography';
import Box from '@mui/material/Box';
import CircularProgress from '@mui/material/CircularProgress';
import Alert from '@mui/material/Alert';
import { useCallback } from 'react';
import { useTranslation } from 'react-i18next';
import { useTheme } from '@mui/material/styles';
import { ProductsGrid } from '../entities/product/ui/ProductsGrid';
import { useGetProductsQuery } from '../shared/api';
import { useAppDispatch } from '../app/store/store';
import { addToCart } from '../features/cart/model/cartSlice';
import type { Product } from '../types/api';
// ‚úÖ –ò—Å–ø–æ–ª—å–∑—É–µ–º –û–ü–¢–ò–ú–ò–ó–ò–†–û–í–ê–ù–ù–´–ï JPEG (–ù–ï WebP!)
import heroImageLight from '../assets/optimized/hero-bg-light-desktop.jpg';
import heroImageDark from '../assets/optimized/hero-bg-dark-desktop.jpg';

const ProductsPage = () => {
  const { t } = useTranslation();
  const theme = useTheme();
  const dispatch = useAppDispatch();

  // ‚úÖ –í—ã–±–∏—Ä–∞–µ–º –ú–ê–õ–ï–ù–¨–ö–û–ï –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø–æ —Ç–µ–º–µ
  const heroImage = theme.palette.mode === 'dark' ? heroImageDark : heroImageLight;

  // ‚úÖ RTK Query ‚Äî –µ–¥–∏–Ω—ã–π –∏—Å—Ç–æ—á–Ω–∏–∫ –∏—Å—Ç–∏–Ω—ã –ø–æ –ø—Ä–æ–¥—É–∫—Ç–∞–º
  const { data, isLoading, error: queryError } = useGetProductsQuery();

  const handleAddToCart = useCallback((product: Product) => {
    dispatch(addToCart({ product, quantity: 1 }));
  }, [dispatch]);

  if (isLoading) {
    return (
      <Container maxWidth="xl" sx={{ py: 4 }}>
        <Box display="flex" justifyContent="center" alignItems="center" minHeight="400px">
          <CircularProgress size={60} />
        </Box>
      </Container>
    );
  }

  if (queryError) {
    const errorMessage = (queryError as any)?.data?.message || (queryError as any)?.error || '–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –ø—Ä–æ–¥—É–∫—Ç—ã';
    return (
      <Container maxWidth="xl" sx={{ py: 4 }}>
        <Alert severity="error">
          <Typography variant="h6">{t('common.error')}</Typography>
          <Typography>{errorMessage}</Typography>
        </Alert>
      </Container>
    );
  }

  return (
    <Box
      sx={{
        position: 'relative',
        minHeight: '100vh',
        pt: 0,
        marginTop: '-80px', // –†–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω—è–µ–º —Ñ–æ–Ω –Ω–∞ —Ö–µ–¥–µ—Ä
        paddingTop: '80px', // –ö–æ–º–ø–µ–Ω—Å–∏—Ä—É–µ–º –æ—Ç—Å—Ç—É–ø
        mb: 4, // –û—Ç—Å—Ç—É–ø –ø–µ—Ä–µ–¥ —Ñ—É—Ç–µ—Ä–æ–º
        // ‚úÖ –°—Ç–∞–±–∏–ª–∏–∑–∏—Ä—É–µ–º layout
        height: 'auto',
        overflow: 'hidden',
      }}
    >
      {/* üñºÔ∏è –û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ —Ñ–æ–Ω–æ–≤–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ë–ï–ó —Ç—è–∂–µ–ª—ã—Ö —Ñ–∏–ª—å—Ç—Ä–æ–≤ */}
      <Box
        sx={{
          position: 'absolute',
          top: 0, // ‚úÖ –£–±–∏—Ä–∞–µ–º –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–π top –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è CLS
          left: 0,
          right: 0,
          height: '100%', // ‚úÖ –°—Ç–∞–±–∏–ª—å–Ω–∞—è –≤—ã—Å–æ—Ç–∞
          backgroundImage: `url(${heroImage})`,
          backgroundSize: 'cover',
          backgroundPosition: 'center',
          // ‚úÖ –£–ë–†–ê–õ–ò –¢–Ø–ñ–ï–õ–´–ï CSS –§–ò–õ–¨–¢–†–´ –¥–ª—è —É—Å–∫–æ—Ä–µ–Ω–∏—è LCP!
          // filter: - –£–î–ê–õ–ï–ù–û
          // transform: - –£–î–ê–õ–ï–ù–û
          zIndex: 0,
          overflow: 'hidden',
        }}
      />

      <Container maxWidth="xl" sx={{ position: 'relative', zIndex: 2 }}>
        <Box 
          mt={4} 
          mb={4}
          sx={{
            textAlign: 'center',
            py: 4,
            backgroundColor: 'rgba(255, 255, 255, 0.1)',
            borderRadius: 2,
            backdropFilter: 'blur(10px)',
            border: '1px solid rgba(255, 255, 255, 0.2)'
          }}
        >
          <Typography 
            variant="h2" 
            component="h1" 
            gutterBottom
            sx={{
              color: 'white',
              fontWeight: 700,
              fontSize: { xs: '2rem', md: '2.5rem', lg: '3rem' },
              textShadow: '2px 2px 4px rgba(0,0,0,0.3)',
              mb: 2
            }}
          >
            üõçÔ∏è {t('products.title')}
          </Typography>
          <Typography 
            variant="h6" 
            sx={{
              color: 'rgba(255, 255, 255, 0.9)',
              fontSize: { xs: '1.1rem', md: '1.25rem' },
              fontWeight: 500,
              textShadow: '1px 1px 2px rgba(0,0,0,0.3)'
            }}
          >
            {t('products.found', { count: data?.data?.length || 0 })}
          </Typography>
        </Box>
        <ProductsGrid products={data?.data || []} onAddToCart={handleAddToCart} />
      </Container>
    </Box>
  );
};

export default ProductsPage;